setwd("C:/Users/dequi/source/repos/biocomp_dynamical_systems/tarea-02")
knitr::opts_chunk$set(echo = TRUE)
library(deSolve)
params <- c(r1=0.7, r2=0.5, a1=0.2, a2=0.2, K1=60, K2=10)
state <- c(X=80, Y=20)
Cr_LVG <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * X) / K1))
dY = r2 * Y * (1 - ((Y + a2 * Y) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- ode(y = state, times=times, func=LGV, parms=params)
library(deSolve)
params <- c(r1=0.7, r2=0.5, a1=0.2, a2=0.2, K1=60, K2=10)
state <- c(X=80, Y=20)
Cr_LVG <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * X) / K1))
dY = r2 * Y * (1 - ((Y + a2 * Y) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- ode(y = state, times=times, func=Cr_LVG, parms=params)
plot(out, xlab='tiempo', ylab='n(t)')
library(deSolve)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * X) / K1))
dY = r2 * Y * (1 - ((Y + a2 * Y) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- ode(y = state, times=times, func=LV, parms=params)
plot(out, xlab='tiempo', ylab='n(t)')
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
library(deSolve)
library(ggplot2)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * X) / K1))
dY = r2 * Y * (1 - ((Y + a2 * Y) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- ode(y = state, times=times, func=LV, parms=params)
ggplot(out, aes(x = time)) +
geom_line(aes(y = X, color = "X")) +
geom_line(aes(y = Y, color = "Y")) +
xlab("Time") +
ylab("Population size") +
scale_color_manual(values = c("X" = "blue", "Y" = "red"))
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
library(deSolve)
library(ggplot2)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * X) / K1))
dY = r2 * Y * (1 - ((Y + a2 * Y) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- as.data.frame(ode(y = state, times=times, func=LV, parms=params))
ggplot(out, aes(x = time)) +
geom_line(aes(y = X, color = "X")) +
geom_line(aes(y = Y, color = "Y")) +
xlab("Time") +
ylab("Population size") +
scale_color_manual(values = c("X" = "blue", "Y" = "red"))
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
library(deSolve)
library(ggplot2)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * Y) / K1))
dY = r2 * Y * (1 - ((Y + a2 * X) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- as.data.frame(ode(y = state, times=times, func=LV, parms=params))
ggplot(out, aes(x = time)) +
geom_line(aes(y = X, color = "X")) +
geom_line(aes(y = Y, color = "Y")) +
xlab("Time") +
ylab("Population Size") +
scale_color_manual(values = c("X" = "blue", "Y" = "red"))
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 80, Y = 20)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = -0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = -0.5, r2 = 0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = -0.5, r2 = -0.4, a1 = 0.2, a2 = 0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 50, X = 25, Y = 25)
library(deSolve)
library(ggplot2)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * Y) / K1))
dY = r2 * Y * (1 - ((Y + a2 * X) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 2000, by=0.01)
out <- as.data.frame(ode(y = state, times=times, func=LV, parms=params))
ggplot(out, aes(x = time)) +
geom_line(aes(y = X, color = "X")) +
geom_line(aes(y = Y, color = "Y")) +
xlab("Time") +
ylab("Population Size") +
scale_color_manual(values = c("X" = "blue", "Y" = "red"))
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 50, X = 25, Y = 25)
library(deSolve)
library(ggplot2)
simulate_LV <- function(r1, r2, a1, a2, K1, K2, X, Y) {
params <- c(r1=r1, r2=r2, a1=a1, a2=a2, K1=K1, K2=K2)
state <- c(X=X, Y=Y)
LV <- function(t, state, params) {
with(as.list(c(state, params)), {
dX = r1 * X * (1 - ((X + a1 * Y) / K1))
dY = r2 * Y * (1 - ((Y + a2 * X) / K2))
list(c(dX, dY))
})
}
times <- seq(0, 100, by=0.01)
out <- as.data.frame(ode(y = state, times=times, func=LV, parms=params))
ggplot(out, aes(x = time)) +
geom_line(aes(y = X, color = "X")) +
geom_line(aes(y = Y, color = "Y")) +
xlab("Time") +
ylab("Population Size") +
scale_color_manual(values = c("X" = "blue", "Y" = "red"))
}
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 50, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 30, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 60, X = 25, Y = 25)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.4, a2 = 0.4, K1 = 50, K2 = 60, X = 25, Y = 30)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.9, a2 = 0.4, K1 = 50, K2 = 60, X = 25, Y = 30)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.6, a2 = 0.4, K1 = 50, K2 = 60, X = 25, Y = 30)
simulate_LV(r1 = 0.5, r2 = 0.4, a1 = 0.6, a2 = 0.4, K1 = 50, K2 = 60, X = 50, Y = 30)
simulate_LV(r1 = 0.8, r2 = 0.6, a1 = -0.2, a2 = -0.2, K1 = 50, K2 = 50, X = 70, Y = 25)
